apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: {{ $.Namespace }}
  labels:
    k8s-app: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: kibana
  template:
    metadata:
      labels:
        k8s-app: kibana
    spec:
      {{- if .Affinity }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - {{$.AffinityNode}}
      {{- end }}
      containers:
        - name: kibana
          #image: docker.elastic.co/kibana/kibana-oss:7.6.0
          #image: kibana:7.3.1
          image: {{$.Image}}
          resources:
            limits:
              cpu: 5
              memory: 2000Mi
            requests:
              cpu: 2
              memory: 1000Mi
          env:
            - name: ELASTICSEARCH_HOSTS
              value: http://elasticsearch7:9200
          ports:
            - containerPort: 5601
              name: ui
              protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: {{ $.Namespace }}
spec:
  ports:
    - port: 5601
      protocol: TCP
      targetPort: ui
  selector:
    k8s-app: kibana

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: kibana
  namespace: {{ $.Namespace }}
spec:
  rules:
    - host: {{$.Ingress}}
      http:
        paths:
          - path: /
            backend:
              serviceName: kibana
              servicePort: 5601